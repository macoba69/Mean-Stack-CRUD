/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import cloneDeep from 'lodash.clonedeep';
/**
 * @template T
 */
var /**
 * @template T
 */
TableElement = /** @class */ (function () {
    function TableElement(init) {
        Object.assign(this, init);
        this.fillValidatorFromData();
        if (this.validator) {
            if (this.editing) {
                this.validator.enable();
            }
            else {
                this.validator.disable();
            }
        }
    }
    Object.defineProperty(TableElement.prototype, "currentData", {
        get: /**
         * @return {?}
         */
        function () {
            //express hack
            if (this.validator) {
                return Object.assign(this._currentData, this.validator.getRawValue());
            }
            else {
                return this._currentData;
            }
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._currentData = value;
            this.fillValidatorFromData();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    TableElement.prototype.fillValidatorFromData = /**
     * @return {?}
     */
    function () {
        if (this.validator) {
            var /** @type {?} */ formData = {};
            for (var /** @type {?} */ key in this.validator.controls) {
                formData[key] = this._currentData[key];
            }
            this.validator.setValue(formData);
        }
    };
    /**
     * @return {?}
     */
    TableElement.prototype.delete = /**
     * @return {?}
     */
    function () {
        this.source.delete(this.id);
    };
    /**
     * @return {?}
     */
    TableElement.prototype.confirmEditCreate = /**
     * @return {?}
     */
    function () {
        this.originalData = undefined;
        if (this.id == -1)
            return this.source.confirmCreate(this);
        else
            return this.source.confirmEdit(this);
    };
    /**
     * @return {?}
     */
    TableElement.prototype.startEdit = /**
     * @return {?}
     */
    function () {
        this.originalData = cloneDeep(this.currentData);
        this.editing = true;
        this.validator.enable();
    };
    /**
     * @return {?}
     */
    TableElement.prototype.cancelOrDelete = /**
     * @return {?}
     */
    function () {
        if (this.id == -1 || !this.editing)
            this.delete();
        else {
            this.currentData = this.originalData;
            this.editing = false;
            this.validator.disable();
        }
    };
    return TableElement;
}());
/**
 * @template T
 */
export { TableElement };
function TableElement_tsickle_Closure_declarations() {
    /** @type {?} */
    TableElement.prototype.id;
    /** @type {?} */
    TableElement.prototype.editing;
    /** @type {?} */
    TableElement.prototype._currentData;
    /** @type {?} */
    TableElement.prototype.originalData;
    /** @type {?} */
    TableElement.prototype.source;
    /** @type {?} */
    TableElement.prototype.validator;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhcjYtbWF0ZXJpYWwtdGFibGUtZWxlbWVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXI2LW1hdGVyaWFsLXRhYmxlLyIsInNvdXJjZXMiOlsibGliL2FuZ3VsYXI2LW1hdGVyaWFsLXRhYmxlLWVsZW1lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUlBLE9BQU8sU0FBUyxNQUFNLGtCQUFrQixDQUFDOzs7O0FBRXpDOzs7QUFBQTtJQXFCRSxzQkFBWSxJQUE4QjtRQUN4QyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQUMxQixJQUFJLENBQUMscUJBQXFCLEVBQUUsQ0FBQztRQUM3QixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztZQUNuQixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztnQkFDakIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQzthQUN6QjtZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNOLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFFLENBQUM7YUFDMUI7U0FDRjtLQUNGO0lBeEJELHNCQUFJLHFDQUFXOzs7O1FBQWY7O1lBRUUsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7Z0JBQ25CLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO2FBQ3ZFO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ04sTUFBTSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUM7YUFDMUI7U0FDRjs7Ozs7UUFFRCxVQUFnQixLQUFLO1lBQ25CLElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO1lBQzFCLElBQUksQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO1NBQzlCOzs7T0FMQTs7OztJQW1CRCw0Q0FBcUI7OztJQUFyQjtRQUNFLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO1lBQ25CLHFCQUFJLFFBQVEsR0FBRyxFQUFFLENBQUM7WUFDbEIsR0FBRyxDQUFDLENBQUMscUJBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztnQkFDeEMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUM7YUFDeEM7WUFDRCxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUNuQztLQUNGOzs7O0lBRUQsNkJBQU07OztJQUFOO1FBQ0UsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0tBQzdCOzs7O0lBRUQsd0NBQWlCOzs7SUFBakI7UUFDRSxJQUFJLENBQUMsWUFBWSxHQUFHLFNBQVMsQ0FBQztRQUM5QixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ2hCLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QyxJQUFJO1lBQ0YsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ3hDOzs7O0lBRUQsZ0NBQVM7OztJQUFUO1FBQ0UsSUFBSSxDQUFDLFlBQVksR0FBRyxTQUFTLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ2hELElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUM7S0FDekI7Ozs7SUFFRCxxQ0FBYzs7O0lBQWQ7UUFDRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNqQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDaEIsSUFBSSxDQUFDLENBQUM7WUFDSixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUM7WUFDckMsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7WUFDckIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUMxQjtLQUNGO3VCQTNFSDtJQTRFQyxDQUFBOzs7O0FBdEVELHdCQXNFQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Rm9ybUdyb3VwfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcblxyXG5pbXBvcnQge1RhYmxlRGF0YVNvdXJjZX0gZnJvbSAnLi9hbmd1bGFyNi1tYXRlcmlhbC10YWJsZS1kYXRhLXNvdXJjZSc7XHJcblxyXG5pbXBvcnQgY2xvbmVEZWVwIGZyb20gJ2xvZGFzaC5jbG9uZWRlZXAnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFRhYmxlRWxlbWVudDxUPiB7XHJcbiAgaWQ6IG51bWJlcjtcclxuICBlZGl0aW5nOiBib29sZWFuO1xyXG4gIHByaXZhdGUgX2N1cnJlbnREYXRhPzogVDtcclxuICBvcmlnaW5hbERhdGE6IFQ7XHJcbiAgc291cmNlOiBUYWJsZURhdGFTb3VyY2U8VD47XHJcbiAgdmFsaWRhdG9yOiBGb3JtR3JvdXA7XHJcbiAgZ2V0IGN1cnJlbnREYXRhKCkge1xyXG4gICAgLy9leHByZXNzIGhhY2tcclxuICAgIGlmICh0aGlzLnZhbGlkYXRvcikge1xyXG4gICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih0aGlzLl9jdXJyZW50RGF0YSwgdGhpcy52YWxpZGF0b3IuZ2V0UmF3VmFsdWUoKSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gdGhpcy5fY3VycmVudERhdGE7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzZXQgY3VycmVudERhdGEodmFsdWUpIHtcclxuICAgIHRoaXMuX2N1cnJlbnREYXRhID0gdmFsdWU7XHJcbiAgICB0aGlzLmZpbGxWYWxpZGF0b3JGcm9tRGF0YSgpO1xyXG4gIH1cclxuXHJcbiAgY29uc3RydWN0b3IoaW5pdDogUGFydGlhbDxUYWJsZUVsZW1lbnQ8VD4+KSB7XHJcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGluaXQpO1xyXG4gICAgdGhpcy5maWxsVmFsaWRhdG9yRnJvbURhdGEoKTtcclxuICAgIGlmICh0aGlzLnZhbGlkYXRvcikge1xyXG4gICAgICBpZiAodGhpcy5lZGl0aW5nKSB7XHJcbiAgICAgICAgdGhpcy52YWxpZGF0b3IuZW5hYmxlKCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy52YWxpZGF0b3IuZGlzYWJsZSgpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBmaWxsVmFsaWRhdG9yRnJvbURhdGEoKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy52YWxpZGF0b3IpIHtcclxuICAgICAgbGV0IGZvcm1EYXRhID0ge307XHJcbiAgICAgIGZvciAobGV0IGtleSBpbiB0aGlzLnZhbGlkYXRvci5jb250cm9scykge1xyXG4gICAgICAgIGZvcm1EYXRhW2tleV0gPSB0aGlzLl9jdXJyZW50RGF0YVtrZXldO1xyXG4gICAgICB9XHJcbiAgICAgIHRoaXMudmFsaWRhdG9yLnNldFZhbHVlKGZvcm1EYXRhKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGRlbGV0ZSgpOiB2b2lkIHtcclxuICAgIHRoaXMuc291cmNlLmRlbGV0ZSh0aGlzLmlkKTtcclxuICB9XHJcblxyXG4gIGNvbmZpcm1FZGl0Q3JlYXRlKCk6IGJvb2xlYW4ge1xyXG4gICAgdGhpcy5vcmlnaW5hbERhdGEgPSB1bmRlZmluZWQ7XHJcbiAgICBpZiAodGhpcy5pZCA9PSAtMSlcclxuICAgICAgcmV0dXJuIHRoaXMuc291cmNlLmNvbmZpcm1DcmVhdGUodGhpcyk7XHJcbiAgICBlbHNlXHJcbiAgICAgIHJldHVybiB0aGlzLnNvdXJjZS5jb25maXJtRWRpdCh0aGlzKTtcclxuICB9XHJcblxyXG4gIHN0YXJ0RWRpdCgpOiB2b2lkIHtcclxuICAgIHRoaXMub3JpZ2luYWxEYXRhID0gY2xvbmVEZWVwKHRoaXMuY3VycmVudERhdGEpO1xyXG4gICAgdGhpcy5lZGl0aW5nID0gdHJ1ZTtcclxuICAgIHRoaXMudmFsaWRhdG9yLmVuYWJsZSgpO1xyXG4gIH1cclxuXHJcbiAgY2FuY2VsT3JEZWxldGUoKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5pZCA9PSAtMSB8fCAhdGhpcy5lZGl0aW5nKVxyXG4gICAgICB0aGlzLmRlbGV0ZSgpO1xyXG4gICAgZWxzZSB7XHJcbiAgICAgIHRoaXMuY3VycmVudERhdGEgPSB0aGlzLm9yaWdpbmFsRGF0YTtcclxuICAgICAgdGhpcy5lZGl0aW5nID0gZmFsc2U7XHJcbiAgICAgIHRoaXMudmFsaWRhdG9yLmRpc2FibGUoKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19